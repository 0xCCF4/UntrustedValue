use crate::SanitizeWith;

/// This trait provides a way to convert a struct into a struct containing only `untrusted_value::UntrustedValue` fields
/// as generated by the `#[derive(UntrustedVariant)]` macro.
pub trait IntoUntrustedVariant<Insecure, Trusted>
where
    Insecure: SanitizeWith<Insecure, Trusted>,
{
    /// Returns a wrapped variant of the struct, containing only
    /// `untrusted_value::UntrustedValue` fields.
    ///
    /// An instance of a struct like this:
    /// ```ignore
    /// #[derive(UntrustedVariant)]
    /// pub struct Example {
    ///    pub name: String,
    /// }
    /// ```
    ///
    /// will be turned into an instance of:
    /// ```rust
    /// # use untrusted_value::UntrustedValue;
    /// pub struct ExampleUntrusted {
    ///   pub name: UntrustedValue<String>,
    /// }
    /// ```
    fn to_untrusted_variant(self) -> Insecure;
}
